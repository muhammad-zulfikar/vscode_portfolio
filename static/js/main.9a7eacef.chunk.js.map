{"version":3,"sources":["data/tabs lazy /^/.//.*/.md$/ groupOptions: {} namespace object","theme/icons.ts","theme/dimens.ts","theme/fonts.ts","layouts/Main/components/Header/NavBar/NavItem/styles.ts","theme/colors.ts","layouts/Main/components/Header/NavBar/NavItem/index.tsx","layouts/Main/components/Header/NavBar/styles.ts","layouts/Main/components/Header/NavBar/index.tsx","layouts/Main/components/Header/styles.ts","layouts/Main/components/Header/index.tsx","components/IconLink/styles.ts","components/IconLink/index.tsx","components/ButtonLink/styles.ts","components/ButtonLink/index.tsx","views/Greeter/components/MainButtons/styles.ts","views/Greeter/components/MainButtons/index.tsx","utils/paths.ts","components/SEO/index.tsx","views/Greeter/styles.ts","views/Greeter/index.tsx","utils/helpers.ts","data/index.tsx","layouts/Main/components/LeftBar/styles.ts","layouts/Main/components/LeftBar/index.tsx","layouts/Main/components/Explorer/styles.ts","layouts/Main/components/Explorer/index.tsx","layouts/Main/components/StatusBar/styles.ts","layouts/Main/components/StatusBar/index.tsx","layouts/Main/styles.ts","layouts/Main/index.tsx","components/Container/styles.ts","components/Container/index.tsx","components/MDTab/index.tsx","components/MDTab/styles.ts","routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","library","add","fab","faHome","faGraduationCap","faCheckSquare","faCoffee","faSlidersH","faUniversity","faCodeBranch","faTimes","faSmile","faStar","faCopy","faSearch","faCog","faQuestionCircle","faEnvelope","faPhoneAlt","faFilePdf","breakpoints","widths","heights","sansFont","root","display","navText","marginLeft","currentTab","color","paddingLeft","otherTab","useStyles","createUseStyles","styles","NavItem","name","url","iconProps","mdFileName","classes","className","to","getProps","isCurrent","size","onClick","preventDefault","stopPropagation","navigate","icon","title","fontFamily","height","list","listStyle","margin","padding","listItem","borderRight","Color","darken","string","borderTop","cursor","fontSize","letterSpacing","textTransform","transition","borderTopColor","background","lighten","Navbar","tabs","tab","key","position","top","left","width","Header","NavBar","link","marginBottom","iconWrapper","badge","right","backgroundColor","borderRadius","opacity","IconLink","isInternal","iconComp","aria-label","href","target","rel","contents","alignItems","minHeight","text","fontWeight","count","ButtonLink","showCount","flexDirection","marginTop","justifyContent","mainButtons","MainButtons","contactData","repoUrl","parts","URL","pathname","split","repo","pop","username","getGHCredentials","centerButton","filter","c","isCenter","mainContacts","isMain","contact","SEO","description","lang","meta","metaDescription","metadata","Helmet","htmlAttributes","titleTemplate","content","keywords","homepage","themeColor","property","image","verification","google","concat","heading","textShadow","userSelect","typedWrap","textDecoration","borderBottom","subHeading","Greeter","staticData","useEffect","options","strings","typed","typeSpeed","backSpeed","loop","smartBackspace","Typed","destroy","hello","randomInt","Math","floor","random","length","randomHello","mainLine","style","whiteSpace","pages","comp","pkg","repository","divider","LeftBar","internals","renderData","data","contactItem","closed","Explorer","open","clsx","bottom","StatusBar","inverse","html","body","boxSizing","button","a","transform","explorerOpen","MainLayout","children","useState","maxWidth","paddingBottom","Container","seo","mdpage","MDTab","fileName","setContents","file","fetch","default","response","loadFile","source","escapeHtml","View","Comp","rest","Tab","path","from","noThrow","App","Main","routes","Boolean","window","location","hostname","match","dotenv","config","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a7eacef.chunk.js","sourcesContent":["var map = {\n\t\"./about.md\": [\n\t\t161,\n\t\t3\n\t],\n\t\"./education.md\": [\n\t\t162,\n\t\t4\n\t],\n\t\"./experience.md\": [\n\t\t163,\n\t\t5\n\t],\n\t\"./projects.md\": [\n\t\t164,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 158;\nmodule.exports = webpackAsyncContext;","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faHome,\n  faGraduationCap,\n  faCheckSquare,\n  faCoffee,\n  faSlidersH,\n  faUniversity,\n  faCodeBranch,\n  faTimes,\n  faSmile,\n  faStar,\n  faCopy,\n  faSearch,\n  faCog,\n  faQuestionCircle,\n  faEnvelope,\n  faPhoneAlt,\n  faFilePdf,\n} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(\n  fab,\n  faHome,\n  faGraduationCap,\n  faCheckSquare,\n  faCoffee,\n  faSlidersH,\n  faUniversity,\n  faCodeBranch,\n  faTimes,\n  faSmile,\n  faStar,\n  faCopy,\n  faSearch,\n  faCog,\n  faQuestionCircle,\n  faEnvelope,\n  faPhoneAlt,\n  faFilePdf,\n);\n","/**\n * Dimensions.\n */\nexport const sSize = '1.2rem';\nexport const msSize = '1.4rem';\nexport const mSize = '1.6rem';\nexport const mlSize = '2.0rem';\nexport const mllSize = '2.4rem';\nexport const lSize = '3.2rem';\nexport const xlSize = '4.8rem';\n\nexport const breakpoints = {\n  desktop: '45rem',\n};\n\nexport const widths = {\n  leftBar: 50,\n  explorer: 200,\n};\n\nexport const heights = {\n  navBar: 40,\n  statusBar: 22,\n};\n","/**\n * App fonts.\n */\nexport const sansFont = \"'Ubuntu', sans-serif\";\nexport const monoFont = \"'Ubuntu Mono', monospace\";\n","/**\n * NavItem component styles.\n */\nimport { Styles } from 'react-jss';\nimport { breakpoints, textLightBlue, textWhite } from '../../../../../../theme';\n\nexport default {\n  root: {\n    '& a[aria-current=\"page\"] span': {\n      display: 'inline-block !important',\n    },\n  },\n  navText: {\n    marginLeft: '8px',\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      display: 'none',\n    },\n  },\n  currentTab: {\n    '& .closeButton': {\n      color: textLightBlue,\n      marginLeft: '8px',\n      paddingLeft: '8px',\n      [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n        paddingLeft: '8px',\n      },\n      '&:hover': {\n        color: textWhite,\n      },\n    },\n  },\n  otherTab: {\n    '& .closeButton': {\n      display: 'none',\n    },\n  },\n} as Styles;\n","/**\n * App colors.\n */\nexport const bgDarkBlue = '#21252b';\nexport const bgMidBlue = '#282c34';\nexport const bgLightBlue = '#333842';\nexport const lbIconColor = '#9599a0';\n\nexport const textWhite = '#f3f3f3';\nexport const textMid = '#c2c2c2';\nexport const textDark = '#909295';\nexport const textBlue = '#636d83';\nexport const textLightBlue = '#abb2bf';\n\nexport const green = '#98c379';\nexport const red = '#e06c75';\nexport const cyan = '#56b6c2';\nexport const midBlue = '#42a5f5';\nexport const orange = '#d19a66';\nexport const jsOrange = '#ffca28';\nexport const darkOrange = '#e44d26';\nexport const lightBrown = '#6e6352';\nexport const pink = '#e13e76';\nexport const purple = '#c678dd';\n","/**\n * NavItem component.\n */\nimport React from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createUseStyles } from 'react-jss';\nimport { TabSpec, TabLink } from '../../../../../../models';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst NavItem: React.FC<TabSpec & TabLink> = ({\n  name,\n  url,\n  mdFileName, // eslint-disable-line @typescript-eslint/no-unused-vars\n  ...iconProps\n}) => {\n  const classes = useStyles();\n\n  const onCloseClicked = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigate('/');\n  };\n\n  return (\n    <span className={classes.root}>\n      <Link\n        to={url}\n        getProps={({ isCurrent }) => {\n          return {\n            className: isCurrent ? classes.currentTab : classes.otherTab,\n          };\n        }}\n      >\n        <FontAwesomeIcon {...iconProps} size={iconProps.size || 'lg'} />\n        <span className={classes.navText}>{name}</span>\n        <FontAwesomeIcon\n          onClick={onCloseClicked}\n          className=\"closeButton\"\n          icon=\"times\"\n          size=\"1x\"\n          title=\"Close\"\n        />\n      </Link>\n    </span>\n  );\n};\n\nexport default NavItem;\n","/**\n * NavBar component styles.\n */\nimport { Styles } from 'react-jss';\nimport Color from 'color';\nimport {\n  bgMidBlue,\n  bgDarkBlue,\n  textWhite,\n  textLightBlue,\n  sSize,\n  breakpoints,\n  sansFont,\n  heights,\n} from '../../../../../theme';\n\nexport default {\n  root: {\n    fontFamily: sansFont,\n    height: heights.navBar,\n  },\n  list: {\n    color: textLightBlue,\n    listStyle: 'none',\n    margin: '0',\n    padding: '0',\n  },\n  listItem: {\n    display: 'inline-block',\n    '& a': {\n      borderRight: `1px solid ${Color(bgMidBlue).darken(0.05).string()}`,\n      borderTop: `4px solid ${bgDarkBlue}`,\n      cursor: 'pointer',\n      display: 'inline-block',\n      fontSize: sSize,\n      letterSpacing: '0.5px',\n      padding: '10px 15px',\n      textTransform: 'lowercase',\n      transition: 'background, border-color 250ms ease',\n      [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n        letterSpacing: '0',\n        padding: '10px',\n      },\n      '&:hover, &[aria-current=\"page\"]': {\n        borderTopColor: bgDarkBlue,\n        background: Color(bgDarkBlue).lighten(0.02).string(),\n        color: textWhite,\n      },\n      '&[aria-current=\"page\"]': {\n        background: bgMidBlue,\n        borderTopColor: Color(bgDarkBlue).lighten(0.05).string(),\n      },\n    },\n  },\n} as Styles;\n","/**\n * NavBar component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport NavItem from './NavItem';\nimport { TabProps } from '../../..';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst Navbar: React.FC<TabProps> = ({ tabs }) => {\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.root}>\n      <ul className={classes.list}>\n        {tabs.map((tab) => (\n          <li className={classes.listItem} key={tab.name}>\n            <NavItem {...tab} />\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/**\n * Header component styles.\n */\nimport { Styles } from 'react-jss';\nimport { bgDarkBlue, heights } from '../../../../theme';\n\nexport default {\n  root: {\n    background: bgDarkBlue,\n    position: 'sticky',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: heights.navBar,\n  },\n} as Styles;\n","/**\n * Header component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport NavBar from './NavBar';\nimport { TabProps } from '../..';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst Header: React.FC<TabProps> = ({ tabs }) => {\n  const classes = useStyles();\n\n  return (\n    <header className={classes.root}>\n      <NavBar tabs={tabs} />\n    </header>\n  );\n};\n\nexport default Header;\n","/**\n * IconLink component styles.\n */\nimport { Styles } from 'react-jss';\nimport Color from 'color';\nimport { lbIconColor, green } from '../../theme';\n\nexport default {\n  link: {\n    color: lbIconColor,\n    cursor: 'pointer',\n    marginBottom: '10px',\n    transition: 'color 100ms ease',\n    '&:hover': {\n      color: Color(lbIconColor).lighten(0.2).string(),\n    },\n    '&:last-of-type': {\n      marginBottom: '20px',\n    },\n  },\n  iconWrapper: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  icon: {\n    padding: '10px',\n  },\n  badge: {\n    position: 'absolute',\n    right: '4px',\n    top: '4px',\n    fontSize: '0.8em',\n    backgroundColor: green,\n    borderRadius: '4px',\n    color: '#111',\n    padding: '1px 2px',\n    opacity: '0.9',\n  },\n} as Styles;\n","/**\n * IconLink component.\n */\nimport React from 'react';\nimport { Link } from '@reach/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { createUseStyles } from 'react-jss';\nimport { ContactItem } from '../../models';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst IconLink: React.FC<ContactItem> = ({\n  name,\n  url,\n  icon,\n  isInternal,\n  badge,\n}) => {\n  const classes = useStyles();\n\n  const iconComp = (\n    <span className={classes.iconWrapper}>\n      <FontAwesomeIcon\n        className={classes.icon}\n        icon={icon as IconProp}\n        size=\"lg\"\n      />\n      {badge && <span className={classes.badge}>{badge}</span>}\n    </span>\n  );\n\n  if (isInternal) {\n    return (\n      <Link\n        to={url}\n        key={`left-bar-${name}`}\n        className={classes.link}\n        aria-label={name}\n        title={name}\n      >\n        {iconComp}\n      </Link>\n    );\n  }\n\n  return (\n    <a\n      href={url}\n      key={`left-bar-${name}`}\n      className={classes.link}\n      aria-label={`Find me on ${name}`}\n      title={`Find me on ${name}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {iconComp}\n    </a>\n  );\n};\n\nexport default IconLink;\n","/**\n * ButtonLink component styles.\n */\nimport { Styles } from 'react-jss';\nimport Color from 'color';\nimport { bgDarkBlue, textLightBlue, midBlue, sSize } from '../../theme';\n\nexport default {\n  root: {\n    background: bgDarkBlue,\n    borderRadius: '4px',\n    color: textLightBlue,\n    display: 'flex',\n    margin: '8px',\n    transition: 'color 500ms ease',\n    '&:hover': {\n      background: Color(bgDarkBlue).darken(0.1).string(),\n    },\n    '&:hover .icon': {\n      color: midBlue,\n    },\n  },\n  contents: {\n    alignItems: 'center',\n    display: 'flex',\n    minHeight: '24px',\n    padding: '6px 10px',\n  },\n  text: {\n    fontSize: sSize,\n    fontWeight: 400,\n    marginLeft: '6px',\n  },\n  count: {\n    fontSize: sSize,\n    background: Color(bgDarkBlue).lighten(0.5).string(),\n    borderRadius: '50%',\n    marginLeft: '10px',\n    padding: '4px 8px',\n  },\n} as Styles;\n","/**\n * ButtonLink component.\n */\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\nimport { createUseStyles } from 'react-jss';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface ButtonLinkProps {\n  href: string;\n  title: string;\n  text: string;\n  icon: IconProp;\n  size: SizeProp;\n  showCount?: boolean;\n  count?: number;\n}\n\nconst ButtonLink: React.FC<ButtonLinkProps> = ({\n  href,\n  title,\n  icon,\n  size,\n  text,\n  showCount,\n  count,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <a\n      className={classes.root}\n      href={href}\n      aria-label={title}\n      title={title}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className={classes.contents}>\n        <FontAwesomeIcon className=\"icon\" icon={icon} size={size || 'lg'} />\n        <span className={classes.text}>{text}</span>\n        {!!showCount && <span className={classes.count}>{count}</span>}\n      </span>\n    </a>\n  );\n};\n\nexport default ButtonLink;\n","/**\n * MainButtons component styles.\n */\nimport { Styles } from 'react-jss';\nimport { breakpoints } from '../../../../theme';\n\nexport default {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: '50px',\n    '& div': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  mainButtons: {\n    display: 'flex',\n    flexDirection: 'row',\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      flexDirection: 'column',\n    },\n    '& div': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n} as Styles;\n","/**\n * MainButtons component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport ButtonLink from '../../../../components/ButtonLink';\nimport { ContactItem } from '../../../../models';\nimport { getGHCredentials } from '../../../../utils';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface MainButtonsProps {\n  contactData: ContactItem[];\n  repoUrl: string;\n}\n\nconst MainButtons: React.FC<MainButtonsProps> = ({ contactData, repoUrl }) => {\n  const classes = useStyles();\n\n  // eslint-disable-next-line\n  const { repo, username } = getGHCredentials(repoUrl);\n\n  const centerButton = contactData.filter((c) => c.isCenter)[0] as ContactItem;\n  const mainContacts = contactData.filter((c) => c.isMain) as ContactItem[];\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <ButtonLink\n          key={`main-contact-${centerButton.icon}`}\n          href={centerButton.url}\n          icon={centerButton.icon as IconProp}\n          size=\"lg\"\n          text={centerButton.text || ''}\n          title=\"\"\n        />\n      </div>\n      <div className={classes.mainButtons}>\n        {mainContacts.map((contact) => (\n          <ButtonLink\n            key={`main-contact-${contact.icon}`}\n            href={contact.url}\n            icon={contact.icon as IconProp}\n            size=\"lg\"\n            text={contact.text || ''}\n            title=\"\"\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MainButtons;\n","/**\n * Extracts username and repo name from given url.\n * @param repoUrl GitHub url\n */\nexport const getGHCredentials = (\n  repoUrl: string,\n): { username: string; repo: string } => {\n  const parts = new URL(repoUrl).pathname.split('/');\n  const repo = parts.pop() || '';\n  const username = parts.pop() || '';\n  return { repo, username };\n};\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport metadata from '../../data/json/metadata.json';\n\nexport interface SEOProps {\n  title: string;\n  description?: string;\n  lang?: string;\n  meta?: HTMLMetaElement[];\n}\n\nconst SEO: React.FC<SEOProps> = ({\n  title,\n  description,\n  lang = 'en',\n  meta = [],\n}) => {\n  const metaDescription = description || metadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s • ${metadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          name: 'keywords',\n          content: metadata.keywords,\n        },\n        {\n          name: 'canonical',\n          content: metadata.homepage,\n        },\n        {\n          name: 'theme-color',\n          content: metadata.themeColor,\n        },\n        {\n          property: `og:title`,\n          content: metadata.title,\n        },\n        {\n          property: `og:description`,\n          content: metadata.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:url`,\n          content: metadata.homepage,\n        },\n        {\n          property: `og:image`,\n          content: metadata.image,\n        },\n        {\n          property: `og:image:width`,\n          content: '320',\n        },\n        {\n          property: `og:image:height`,\n          content: '320',\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:site`,\n          content: metadata.homepage,\n        },\n        {\n          name: `twitter:title`,\n          content: metadata.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metadata.description,\n        },\n        {\n          name: `twitter:image`,\n          content: metadata.image,\n        },\n        {\n          name: `google-site-verification`,\n          content: metadata.verification.google,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nexport default SEO;\n","/**\n * Greeter component styles.\n */\nimport { Styles } from 'react-jss';\n\nimport {\n  bgDarkBlue,\n  textMid,\n  textDark,\n  midBlue,\n  mllSize,\n  lSize,\n  breakpoints,\n  mlSize,\n  mSize,\n  sansFont,\n  heights,\n} from '../../theme';\n\nexport default {\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    height: `calc(100vh - ${heights.navBar + heights.statusBar}px)`,\n    justifyContent: 'center',\n    fontFamily: sansFont,\n  },\n  heading: {\n    color: textMid,\n    fontWeight: 400,\n    fontSize: lSize,\n    letterSpacing: '2px',\n    margin: '10px 20px',\n    padding: '0',\n    textShadow: `5px 5px ${bgDarkBlue}`,\n    userSelect: 'none',\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      fontSize: mllSize,\n    },\n  },\n  typedWrap: {\n    color: textDark,\n    fontSize: mllSize,\n    fontWeight: 400,\n    margin: '5px',\n    padding: '0',\n    userSelect: 'none',\n    '& a': {\n      textDecoration: 'none',\n      borderBottom: `1px dashed ${textDark}`,\n    },\n    '& strong': {\n      fontWeight: '500',\n    },\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      fontSize: mlSize,\n    },\n  },\n  subHeading: {\n    color: textDark,\n    fontSize: mSize,\n    fontWeight: 400,\n    margin: '5px',\n    padding: '0',\n    userSelect: 'none',\n    '& a': {\n      textDecoration: 'none',\n    },\n    '& strong': {\n      fontWeight: '500',\n    },\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      fontSize: mlSize,\n    },\n  },\n  '.typed-cursor': {\n    color: midBlue,\n  },\n} as Styles;\n","/**\n * Greeter component.\n */\nimport React, { useEffect } from 'react';\nimport Typed from 'typed.js';\nimport { createUseStyles } from 'react-jss';\nimport MainButtons, { MainButtonsProps } from './components/MainButtons';\nimport SEO from '../../components/SEO';\nimport { Static } from '../../models';\nimport { randomHello } from '../../utils';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface GreeterProps extends MainButtonsProps {\n  staticData: Static;\n}\n\nconst Greeter: React.FC<GreeterProps> = ({\n  staticData,\n  contactData,\n  repoUrl,\n}) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    const options = {\n      strings: staticData.typed,\n      typeSpeed: 70,\n      backSpeed: 70,\n      loop: true,\n      smartBackspace: true,\n    };\n\n    const typed = new Typed('#typed-insert-point', options);\n\n    return () => {\n      // Make sure to destroy Typed instance on unmounting\n      // to prevent memory leaks\n      typed.destroy();\n    };\n  }, [staticData]);\n\n  const hello = randomHello();\n\n  return (\n    <>\n      <SEO title={hello} />\n      <section className={classes.root}>\n        <h1 className={classes.heading}>{staticData.mainLine}</h1>\n        <div className={classes.typedWrap}>\n          <span id=\"typed-insert-point\" style={{ whiteSpace: 'pre' }} />\n        </div>\n        <MainButtons contactData={contactData} repoUrl={repoUrl} />\n      </section>\n    </>\n  );\n};\n\nexport default Greeter;\n","import hello from '../data/json/hello.json';\n\n/**\n * Says Hello in a random language.\n */\nexport const randomHello = (): string => {\n  const randomInt = Math.floor(Math.random() * hello.length);\n  return `${hello[randomInt].hello}!`;\n};\n","import React from 'react';\nimport Greeter from '../views/Greeter';\n// eslint-disable-next-line\nimport Diploma from '../views/Diploma';\nimport { PageLink, TabLink } from '../models';\nimport { jsOrange, midBlue } from '../theme/colors';\n\nimport staticData from './json/static.json';\nimport contactData from './json/contact.json';\n// eslint-disable-next-line\nimport csData from './json/cs.json';\n// import baData from './json/ba.json';\nimport pkg from '../../package.json';\n\n// eslint-disable-next-line\nimport { calculateDiplomaProgress } from '../utils';\n\nexport const pages: PageLink[] = [\n  {\n    name: 'Home',\n    url: '/',\n    icon: 'home',\n    isInternal: true,\n    comp: () => (\n      <Greeter\n        staticData={staticData}\n        contactData={contactData}\n        repoUrl={pkg.repository.url}\n      />\n    ),\n  },\n  // {\n  //   name: 'Computer Science',\n  //   url: '/cs',\n  //   icon: 'graduation-cap',\n  //   isInternal: true,\n  //   badge: `${calculateDiplomaProgress(csData, 0)}%`,\n  //   comp: () => <Diploma diplomaData={csData} />,\n  // },\n  // {\n  //   name: 'Business Administration',\n  //   url: '/ba',\n  //   icon: 'graduation-cap',\n  //   isInternal: true,\n  //   badge: `${calculateDiplomaProgress(baData, 0)}%`,\n  //   comp: () => <Diploma diplomaData={baData} />,\n  // },\n];\n\nexport const tabs: TabLink[] = [\n  {\n    name: 'experience.html',\n    url: '/experience',\n    icon: ['fab', 'html5'],\n    color: 'orange',\n    mdFileName: 'experience',\n  },\n  {\n    name: 'education.css',\n    url: '/education',\n    icon: ['fab', 'css3'],\n    color: midBlue,\n    mdFileName: 'education',\n  },\n  {\n    name: 'projects.js',\n    url: '/projects',\n    icon: ['fab', 'js'],\n    color: jsOrange,\n    mdFileName: 'projects',\n  },\n  {\n    name: 'about.py',\n    url: '/about',\n    icon: ['fab', 'python'],\n    color: midBlue,\n    mdFileName: 'about',\n  },\n];\n","/**\n * LeftBar component styles.\n */\nimport { Styles } from 'react-jss';\nimport Color from 'color';\nimport { bgLightBlue, breakpoints, widths } from '../../../../theme';\n\nexport default {\n  root: {\n    alignItems: 'center',\n    background: bgLightBlue,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: '100vh',\n    position: 'fixed',\n    left: '0',\n    top: '0',\n    width: `${widths.leftBar}px`,\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      display: 'none',\n    },\n    '& div': {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column',\n      padding: '10px 0',\n    },\n  },\n  divider: {\n    height: '1px',\n    background: Color(bgLightBlue).lighten(0.35).string(),\n    width: '95%',\n    marginTop: '4px',\n    marginBottom: '12px',\n  },\n} as Styles;\n","/**\n * LeftBar component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport IconLink from '../../../../components/IconLink';\nimport { ContactItem } from '../../../../models';\nimport { pages } from './../../../../data';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface LeftBarProps {\n  contactData: ContactItem[];\n}\n\nconst LeftBar: React.FC<LeftBarProps> = ({ contactData }) => {\n  const classes = useStyles();\n\n  // Internal links.\n  const internals = pages.map(({ name, url, icon, isInternal, badge }) => ({\n    name,\n    url,\n    icon,\n    isInternal,\n    badge,\n  }));\n\n  const bottom: ContactItem[] = [\n    {\n      name: 'Useless button!',\n      url: '',\n      icon: 'cog',\n      isInternal: true,\n    },\n  ];\n\n  const renderData = (data: ContactItem[]) => {\n    return data.map((contactItem) => (\n      <IconLink key={contactItem.name} {...contactItem} />\n    ));\n  };\n\n  const renderDivider = () => <span className={classes.divider} />;\n\n  return (\n    <div className={classes.root}>\n      <div>\n        {renderData(internals)}\n        {renderDivider()}\n        {renderData(contactData)}\n      </div>\n      <div>{renderData(bottom)}</div>\n    </div>\n  );\n};\n\nexport default LeftBar;\n","/**\n * Explorer component styles.\n */\nimport { Styles } from 'react-jss';\nimport { widths, bgDarkBlue } from '../../../../theme';\n\nexport default {\n  root: {\n    background: bgDarkBlue,\n    height: '100vh',\n    position: 'fixed',\n    top: '0',\n    left: widths.leftBar,\n    width: widths.explorer,\n    '& li': {\n      listStyle: 'none',\n      padding: '6px 12px',\n    },\n  },\n  closed: {\n    display: 'none',\n  },\n} as Styles;\n","/**\n * Explorer component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\nimport { TabProps } from '../..';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface ExplorerProps {\n  open: boolean;\n}\n\nconst Explorer: React.FC<ExplorerProps & TabProps> = ({ tabs, open }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, { [classes.closed]: !open })}>\n      {tabs.map((t) => (\n        <li key={t.name}>{t.mdFileName}</li>\n      ))}\n    </div>\n  );\n};\n\nexport default Explorer;\n","/**\n * StatusBar component styles.\n */\nimport { Styles } from 'react-jss';\nimport {\n  bgDarkBlue,\n  bgMidBlue,\n  textLightBlue,\n  sSize,\n  sansFont,\n  heights,\n} from '../../../../theme';\n\nexport default {\n  root: {\n    bottom: '0',\n    background: bgDarkBlue,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    fontFamily: sansFont,\n    fontWeight: 400,\n    left: '0',\n    position: 'fixed',\n    width: '100vw',\n    height: heights.statusBar,\n    '& span, & a': {\n      display: 'inline-block',\n      padding: '2px 8px',\n      '&:hover': {\n        background: bgMidBlue,\n        cursor: 'pointer',\n      },\n    },\n  },\n  icon: {\n    color: textLightBlue,\n  },\n  text: {\n    color: textLightBlue,\n    fontSize: sSize,\n    padding: '0 4px',\n  },\n} as Styles;\n","/**\n * StatusBar component.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styles from './styles';\nimport pkg from '../../../../../package.json';\n\nconst useStyles = createUseStyles(styles);\n\nconst StatusBar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.root}>\n      <a href={pkg.repository.url} rel=\"noopener noreferrer\" target=\"_blank\">\n        <FontAwesomeIcon\n          className={classes.icon}\n          icon=\"code-branch\"\n          size=\"xs\"\n          inverse\n        />\n        <span className={classes.text}>master</span>\n      </a>\n\n      <span>\n        <FontAwesomeIcon\n          className={classes.icon}\n          icon=\"smile\"\n          size=\"sm\"\n          inverse\n        />\n      </span>\n    </footer>\n  );\n};\n\nexport default StatusBar;\n","/**\n * Main layout styles.\n */\nimport Color from 'color';\nimport { Styles } from 'react-jss';\nimport {\n  bgMidBlue,\n  textLightBlue,\n  mSize,\n  monoFont,\n  breakpoints,\n  widths,\n} from '../../theme';\n\n// Notice that it's an object containing\n// global \"base\" values for the rest of the app.\nexport default {\n  '@global': {\n    html: {\n      fontSize: '62.5%',\n    },\n    body: {\n      fontFamily: monoFont,\n      fontSize: mSize,\n      background: bgMidBlue,\n      boxSizing: 'border-box',\n    },\n    button: {\n      cursor: 'pointer',\n      '&:disabled': {\n        cursor: 'default',\n      },\n    },\n    a: {\n      color: textLightBlue,\n      textDecoration: 'none',\n      transition: 'color 500ms ease',\n      '&:visited': {\n        color: Color(textLightBlue).darken(0.1).string(),\n      },\n    },\n    '.color-transform': {\n      transform: 'color 500ms ease',\n    },\n  },\n  root: {\n    position: 'absolute',\n    height: '100vh',\n    width: `calc(100% - ${widths.leftBar}px)`,\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      width: '100%',\n    },\n    padding: 0,\n    margin: 0,\n  },\n  content: {\n    position: 'relative',\n    top: 0,\n    left: `${widths.leftBar}px`,\n    right: 0,\n    width: '100%',\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      left: '0',\n    },\n  },\n  explorerOpen: {\n    left: `${widths.leftBar + widths.explorer}px`,\n  },\n} as Styles;\n","/**\n * Main layout.\n */\nimport React, { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport clsx from 'clsx';\nimport Header from './components/Header';\nimport LeftBar from './components/LeftBar';\nimport Explorer from './components/Explorer';\nimport StatusBar from './components/StatusBar';\nimport { ContactItem, TabLink } from '../../models';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface TabProps {\n  tabs: TabLink[];\n}\n\nexport interface ContactProps {\n  contactData: ContactItem[];\n}\n\nexport type MainLayoutProps = TabProps & ContactProps;\n\nconst MainLayout: React.FC<MainLayoutProps> = ({\n  children,\n  tabs,\n  contactData,\n}) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [explorerOpen, setExplorerOpen] = useState(false);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LeftBar contactData={contactData} />\n      <Explorer tabs={tabs} open={explorerOpen} />\n      <main\n        className={clsx(classes.content, {\n          [classes.explorerOpen]: explorerOpen,\n        })}\n      >\n        <Header tabs={tabs} />\n        {children}\n      </main>\n      <StatusBar />\n    </div>\n  );\n};\n\nexport default MainLayout;\n","/**\n * Container component styles.\n */\nimport { Styles } from 'react-jss';\nimport {\n  breakpoints,\n  midBlue,\n  textLightBlue,\n  textMid,\n  mSize,\n} from '../../theme';\n\nexport default {\n  root: {\n    maxWidth: '960px',\n    padding: '0 20px',\n    marginBottom: '200px',\n    '& a:hover': {\n      color: textMid,\n    },\n    '& li': {\n      listStyle: 'square',\n    },\n    [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n      marginLeft: 0,\n    },\n  },\n  content: {\n    color: textLightBlue,\n    fontSize: mSize,\n    '& h3': {\n      color: midBlue,\n    },\n    '& ul': {\n      '& li': {\n        paddingBottom: '4px',\n        '& a': {\n          color: midBlue,\n        },\n      },\n      [`@media screen and (max-width: ${breakpoints.desktop})`]: {\n        paddingLeft: '20px',\n      },\n    },\n  },\n} as Styles;\n","/**\n * Container components used in tabs.\n */\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport SEO, { SEOProps } from '../SEO';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface ContainerProps {\n  seo?: SEOProps;\n}\n\nconst Container: React.FC<ContainerProps> = ({ seo, children }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {!!seo && <SEO {...seo} />}\n      <div className={classes.root}>\n        <div className={classes.content}>{children}</div>\n      </div>\n    </>\n  );\n};\n\nexport default Container;\n","/**\n * MDTab component.\n */\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Container from '../Container';\nimport { createUseStyles } from 'react-jss';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\nexport interface MDTabProps {\n  fileName: string;\n}\n\nconst MDTab: React.FC<MDTabProps> = ({ fileName }) => {\n  const [contents, setContents] = useState<string>('');\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const loadFile = async () => {\n      const file = await import(`../../data/tabs/${fileName}.md`);\n      const response = await fetch(file.default);\n      const text = await response.text();\n      setContents(text);\n    };\n    loadFile();\n  }, [fileName]);\n\n  return (\n    <Container seo={{ title: fileName }}>\n      <ReactMarkdown\n        className={classes.mdpage}\n        source={contents}\n        escapeHtml={false}\n      />\n    </Container>\n  );\n};\n\nexport default MDTab;\n","/**\n * MDTab component styles.\n */\nimport { Styles } from 'react-jss';\n\nexport default {\n  mdpage: {\n    paddingBottom: '10rem',\n  },\n} as Styles;\n","import React from 'react';\nimport { RouteComponentProps, Redirect } from '@reach/router';\nimport MDTab, { MDTabProps } from './components/MDTab';\nimport { PageProps } from './models';\n\nimport { pages, tabs } from './data/';\n\ntype ViewProps = RouteComponentProps & PageProps;\nconst View: React.FC<ViewProps> = ({ comp: Comp, ...rest }) => {\n  return <Comp {...rest} />;\n};\n\ntype TabProps = RouteComponentProps & MDTabProps;\nconst Tab: React.FC<TabProps> = ({ fileName }) => {\n  return <MDTab fileName={fileName} />;\n};\n\nexport default [\n  pages.map(({ name, url, comp, ...rest }) => (\n    <View path={url} key={name} comp={comp} {...rest} />\n  )),\n  tabs.map(({ name, url, mdFileName }) => (\n    <Tab path={url} key={name} fileName={mdFileName} />\n  )),\n  <Redirect key=\"notfound\" from=\"*\" to=\"/\" default noThrow />,\n];\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport MainLayout from './layouts/Main';\nimport routes from './routes';\n\nimport { tabs } from './data';\nimport contactData from './data/json/contact.json';\n\nconst App: React.FC = () => (\n  <MainLayout tabs={tabs} contactData={contactData}>\n    <Router>{routes}</Router>\n  </MainLayout>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\n/* eslint-enable */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './theme/icons';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport dotenv from 'dotenv';\ndotenv.config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}